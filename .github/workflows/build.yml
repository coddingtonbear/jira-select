# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Build

on:
  push:
    tags:
      - '*'

jobs:
  createrelease:
    name: Create Release
    runs-on: [ubuntu-latest]
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
    - name: Save Release URL File for Publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt
  build:
    name: Build Packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: >
             cd pyinstaller &&
             make exe &&
             cd dist &&
             zip -r9 jira-select jira-select.app/
            OUT_FILE_NAME: jira-select.zip
            ASSET_MIME: application/zip
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: >
             cd pyinstaller &&
             make exe &&
             cd dist
            OUT_FILE_NAME: jira-select.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
          - os: ubuntu-latest
            TARGET: linux
            CMD_BUILD: >
             cd pyinstaller &&
             make exe &&
             cd dist &&
             tar -czvf jira-select.tar.gz ./jira-select
            OUT_FILE_NAME: jira-select.tar.gz
            ASSET_MIME: application/gzip
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Build with pyinstaller for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}
    - name: Load Release URL from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url
    - name: Get Release File Name & Upload URL
      id: get_release_info
      shell: bash
      run: |
        value=`cat release_url/release_url.txt`
        echo ::set-output name=upload_url::$value
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./pyinstaller/dist/${{ matrix.OUT_FILE_NAME }}
        asset_name: ${{ matrix.OUT_FILE_NAME }}
        asset_content_type: ${{ matrix.ASSET_MIME }}
