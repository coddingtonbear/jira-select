[metadata]
name = jira-select
author = Adam Coddington
author-email = me@adamcoddington.net
summary = Easily export JIRA issues to CSV
description-file = readme.md
description-content-type = text/markdown; charset=UTF-8
home-page = https://github.com/coddingtonbear/jira-select/
license = MIT
classifier =
    Development Status :: 4 - Beta
    Environment :: Console
    Programming Language :: Python :: 3
keywords =
    jira
    csv

[files]
packages =
    jira_select

[entry_points]
console_scripts =
    jira-select = jira_select.cmdline:main
jira_select.commands =
    configure = jira_select.commands.configure:Command
    store-password = jira_select.commands.store_password:Command
    build-query = jira_select.commands.build_query:Command
    run-query = jira_select.commands.run:Command
    schema = jira_select.commands.schema:Command
    functions = jira_select.commands.functions:Command
    shell = jira_select.commands.shell:Command
    run-script = jira_select.commands.run_script:Command
jira_select.formatters =
    csv = jira_select.formatters.csv:Formatter
    table = jira_select.formatters.table:Formatter
jira_select.functions =
    sprint_details = jira_select.functions.sprint_details:Function
    sprint_name = jira_select.functions.sprint_name:Function
    get_sprint_by_id = jira_select.functions.get_sprint_by_id:Function
    get_sprint_by_name = jira_select.functions.get_sprint_by_name:Function
    field_by_name = jira_select.functions.field_by_name:Function
    estimate_to_days = jira_select.functions.estimate_to_days:Function
    extract = jira_select.functions.extract:Function
    flatten_list = jira_select.functions.flatten_list:Function
    flatten_changelog = jira_select.functions.flatten_changelog:Function
    simple_filter = jira_select.functions.simple_filter:Function
    simple_filter_any = jira_select.functions.simple_filter_any:Function
    parse_datetime = jira_select.functions.parse_datetime:Function
jira_select.sources =
    issues = jira_select.sources.issues:Source
    boards = jira_select.sources.boards:Source
    sprints = jira_select.sources.sprints:Source

[flake8]
# https://github.com/ambv/black#line-length
max-line-length = 88
ignore =
  E203,  # E203: whitespace before ':' (defer to black)
  E231,  # E231: missing whitespace after ',' (defer to black)
  E501,  # E501: line length (defer to black)
  W503,  # W503: break before binary operators (defer to black)
  A003,  # A003: [builtins] allow class attributes to be named after builtins (e.g., `id`)
exclude =
  migrations,

[pep8]
max-line-length = 88
ignore =
  E701,  # E701: multiple statements on one line (flags py3 inline type hints)

[pydocstyle]
# Harvey's initial attempt at pydocstyle rules. Please suggest improvements!
# The `(?!\d{4}_)` pattern is a hacky way to exclude migrations, since pydocstyle doesn't
# have an `exclude` option. https://github.com/PyCQA/pydocstyle/issues/175
match = (?!test_)(?!\d{4}_).*\.py

# See http://www.pydocstyle.org/en/5.0.1/error_codes.html
ignore =
  D100,  # D100: docstring in public module (we don't have a practice around this)
  D104,  # D104: docstring in public package (we don't have a practice around this)
  D105,  # D105: docstring in magic method
  D107,  # D105: docstring in __init__ method
  D203,  # D203: Blank line required before class docstring
  D213,  # D213: Multi-line docstring summary should start at the second line (need to choose D212 or D213; see https://stackoverflow.com/a/45990465)
  D302,  # D302: Use u”“” for Unicode docstrings

[tool:isort]
force_single_line = True
line_length = 88
known_first_party = jira_select
default_section = THIRDPARTY
skip = .tox,.eggs,build,dist

[mypy-jira.*]
ignore_missing_imports = True

[mypy-configobj.*]
ignore_missing_imports = True

[mypy-appdirs.*]
ignore_missing_imports = True

[mypy-keyring.*]
ignore_missing_imports = True

[mypy-rich.*]
ignore_missing_imports = True

[mypy-PyInquirer.*]
ignore_missing_imports = True

[mypy-simpleeval.*]
ignore_missing_imports = True
